(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{393:function(_,v,l){"use strict";l.r(v);var i=l(13),a=Object(i.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"_1-元字符和修饰符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-元字符和修饰符"}},[_._v("#")]),_._v(" 1.元字符和修饰符")]),_._v(" "),v("p",[_._v("正则就是规则，用来处理字符串的规则")]),_._v(" "),v("ul",[v("li",[_._v("只能处理字符串")]),_._v(" "),v("li",[_._v("验证字符串是否符合这个规则")]),_._v(" "),v("li",[_._v("把字符串中符合规则的信息获取到")])]),_._v(" "),v("h2",{attrs:{id:"量词元字符-让某个元字符出现多少次"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#量词元字符-让某个元字符出现多少次"}},[_._v("#")]),_._v(" 量词元字符：让某个元字符出现多少次")]),_._v(" "),v("ul",[v("li",[_._v("*：零到多次")]),_._v(" "),v("li",[_._v("+：一到多次")]),_._v(" "),v("li",[_._v("?：零次或者一次")]),_._v(" "),v("li",[_._v("{n}：出现n次")]),_._v(" "),v("li",[_._v("{n,}：出现n到多次")]),_._v(" "),v("li",[_._v("{n,m}：出现n到m次")])]),_._v(" "),v("h2",{attrs:{id:"特殊元字符-有特殊意义的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特殊元字符-有特殊意义的"}},[_._v("#")]),_._v(" 特殊元字符：有特殊意义的")]),_._v(" "),v("ul",[v("li",[_._v("\\：转义字符（普通->特殊->普通)")]),_._v(" "),v("li",[_._v(".：除\\n（换行符）以外的任意字符")]),_._v(" "),v("li",[_._v("^：以哪个元字符作为开始")]),_._v(" "),v("li",[_._v("$：以哪个元字符作为结束")]),_._v(" "),v("li",[_._v("\\n：换行符")]),_._v(" "),v("li",[_._v("\\d：0~9之间的一个数字")]),_._v(" "),v("li",[_._v("\\D：非0~9之间的一个数字（大写和小写的意思是相反的）")]),_._v(" "),v("li",[_._v("\\w：数字、字母、下划线中的任意一个字符")]),_._v(" "),v("li",[_._v("\\s：一个空白字符（包含空格、制表符、换页符等）")]),_._v(" "),v("li",[_._v("\\t：一个制表符（一个TAB键：四个空格）")]),_._v(" "),v("li",[_._v("\\b：匹配一个单词的边界")]),_._v(" "),v("li",[_._v("x|y：x或者y中的一个字符")]),_._v(" "),v("li",[_._v("[xyz]：x或者y或者z中的一个字符")]),_._v(" "),v("li",[_._v("[^xy]：除了x/y以外的任意字符")]),_._v(" "),v("li",[_._v("[a-z]：指定a-z这个范围中的任意字符 [0-9a-zA-Z_] === \\w")]),_._v(" "),v("li",[_._v("[^a-z]：上一个[a-z]的取反“非”")]),_._v(" "),v("li",[_._v("()：正则中的分组符号")]),_._v(" "),v("li",[_._v("(?: )：只匹配不捕获")]),_._v(" "),v("li",[_._v("(?=)：正向预查")]),_._v(" "),v("li",[_._v("(?!)：负向预查")])]),_._v(" "),v("h2",{attrs:{id:"普通元字符-代表自己本身含义的元字符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#普通元字符-代表自己本身含义的元字符"}},[_._v("#")]),_._v(" 普通元字符：代表自己本身含义的元字符")]),_._v(" "),v("p",[_._v("asd123 等等。。。。\n/123/\n/asd/")]),_._v(" "),v("h2",{attrs:{id:"修饰符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[_._v("#")]),_._v(" 修饰符：")]),_._v(" "),v("ul",[v("li",[_._v("i => ignoreCase：忽略单词大小写匹配")]),_._v(" "),v("li",[_._v("m => multiline：可以进行多行匹配")]),_._v(" "),v("li",[_._v("g => global：全局匹配")])])])}),[],!1,null,null,null);v.default=a.exports}}]);