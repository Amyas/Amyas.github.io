(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{399:function(t,v,_){"use strict";_.r(v);var a=_(13),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_1、http1-0-1-1-2区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、http1-0-1-1-2区别"}},[t._v("#")]),t._v(" 1、HTTP1.0/1.1/2区别")]),t._v(" "),v("h2",{attrs:{id:"http1-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http1-0"}},[t._v("#")]),t._v(" HTTP1.0")]),t._v(" "),v("p",[t._v("HTTP协议的第二个版本，第一个在通讯中指定版本号的HTTP协议版本。")]),t._v(" "),v("p",[t._v("HTTP1.0浏览器与服务器只保留短暂的连接，每次请求都需要与服务器建立一个TCP连接。")]),t._v(" "),v("p",[t._v("服务器完成请求处理后立即断开TCP连接，服务器不跟踪每个客户也不记录过去的请求。")]),t._v(" "),v("p",[t._v("简单来讲，每次与服务器交互，都需要新开一个连接")]),t._v(" "),v("img",{attrs:{src:"https://raw.githubusercontent.com/Amyas/picgo-bed/master/amyas.github.io/42022-04-11-16-02-40.png",alt:"42022-04-11-16-02-40",width:"",height:""}}),t._v(" "),v("p",[t._v("例如：")]),t._v(" "),v("p",[t._v("解析html文件，当发现文件中存在资源文件的时候，这时候又创建单独的链接。")]),t._v(" "),v("p",[t._v("最终导致，一个html文件的访问包含了多次的请求和响应，每次请求都需要创建连接、关系连接。")]),t._v(" "),v("p",[t._v("这种形式显然造成了性能上的缺陷。")]),t._v(" "),v("p",[t._v("如果需要建立长连接，需要设置一个非标准的Connection字段"),v("code",[t._v("Connection: keep-alive")])]),t._v(" "),v("h2",{attrs:{id:"http1-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" HTTP1.1")]),t._v(" "),v("p",[t._v("在HTTP1.1中，默认支持长连接（"),v("code",[t._v("Connection: keep-alive")]),t._v("），即在一个TCP连接上可以传送多个HTTP请求和响应，减少了建立和关闭连接的消耗和延迟。")]),t._v(" "),v("p",[t._v("建立一次连接，多个请求均由这个连接完成。")]),t._v(" "),v("img",{attrs:{src:"https://raw.githubusercontent.com/Amyas/picgo-bed/master/amyas.github.io/42022-04-11-16-05-54.png",alt:"42022-04-11-16-05-54",width:"",height:""}}),t._v(" "),v("p",[t._v("这样，在加载html文件的时候，文件中多个请求和响应就可以在一个连接中传输。")]),t._v(" "),v("p",[t._v("同时，HTTP1.1还允许客户端不用等待上一次请求结果返回，就可以发出下一次请求，但服务端必须按照接受到客户端请求的先后顺序依次回送响应结果，以保证客户端能够区分出每次请求的响应内容，这样也显著的减少了整个下载过程所需的时间。")]),t._v(" "),v("p",[t._v("同时，HTTP1.1在HTTP1.0的基础上，增加更多的请求头和响应头来完善的功能如下：")]),t._v(" "),v("ul",[v("li",[t._v("引入了更多的缓存控制策略，如If-Unmodified-Since，If-Match，If-None-Match等缓存头来控制缓存策略")]),t._v(" "),v("li",[t._v("引入range，允许只请求资源某个部分")]),t._v(" "),v("li",[t._v("引入host，实现了在一台WEB服务器上可以在同一个IP地址和端口上使用不同的主机名来创建多个虚拟WEB站点")])]),t._v(" "),v("p",[t._v("并且还添加了其他的请求方法："),v("code",[t._v("put")]),t._v("、"),v("code",[t._v("delete")]),t._v("、"),v("code",[t._v("options")]),t._v("...")]),t._v(" "),v("h2",{attrs:{id:"http2-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" HTTP2.0")]),t._v(" "),v("p",[t._v("HTTP2.0在相比之前的版本，性能上有很大的提升，添加如下特性：")]),t._v(" "),v("ul",[v("li",[t._v("多路复用")]),t._v(" "),v("li",[t._v("二进制分帧")]),t._v(" "),v("li",[t._v("首部压缩")]),t._v(" "),v("li",[t._v("服务器推送")])]),t._v(" "),v("h3",{attrs:{id:"多路复用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),v("p",[t._v("HTTP2.0复用TCP连接，在一个连接里，客户端和服务端都可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了“队头阻塞”")]),t._v(" "),v("img",{attrs:{src:"https://raw.githubusercontent.com/Amyas/picgo-bed/master/amyas.github.io/42022-04-12-11-06-17.png",alt:"42022-04-12-11-06-17",width:"",height:""}}),t._v(" "),v("p",[t._v("上图汇总，可以看到第四部中css、js资源是同时发送到服务端")]),t._v(" "),v("h3",{attrs:{id:"二进制分帧"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二进制分帧"}},[t._v("#")]),t._v(" 二进制分帧")]),t._v(" "),v("p",[t._v("帧是HTTP2.0通信中的最小单位信息。")]),t._v(" "),v("p",[t._v("HTTP2.0采用二进制格式传输数据，而非HTTP1.X的文本格式，解析起来更高效。")]),t._v(" "),v("p",[t._v("将请求和响应数据分割为更小的帧，并且它们采用二进制编码。")]),t._v(" "),v("p",[t._v("HTTP2.0中，同域名下所有通信都在单个连接上完成，该连接可以承载任何数量的双向数据流。")]),t._v(" "),v("p",[t._v("每个数据流都以消息的形式发送，而消息又由一个或多个帧组成。多个帧之间可以乱序发送，根据帧首部的流标识可以重新组装，这也是多路复用同时发送数据的实现条件。")]),t._v(" "),v("h3",{attrs:{id:"首部压缩"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#首部压缩"}},[t._v("#")]),t._v(" 首部压缩")]),t._v(" "),v("p",[t._v("HTTP2.0在客户端和服务端使用“首部表”来跟踪和存储之前发送的键值对，对于相同的数据，不再通过每次请求和响应发送。")]),t._v(" "),v("p",[t._v("首部表在HTTP2.0的连接存续期内始终存在，由客户端和服务端共同渐进地更新。")]),t._v(" "),v("p",[t._v("例如：下图中的两个请求，请求1发送了所有的头部字段，请求2则是需要发送差异数据，这样可以减少冗余数据，降低开销")]),t._v(" "),v("img",{attrs:{src:"https://raw.githubusercontent.com/Amyas/picgo-bed/master/amyas.github.io/42022-04-12-11-12-26.png",alt:"42022-04-12-11-12-26",width:"",height:""}}),t._v(" "),v("h3",{attrs:{id:"服务器推送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务器推送"}},[t._v("#")]),t._v(" 服务器推送")]),t._v(" "),v("p",[t._v("HTTP2引入服务器推送，允许服务器推送资源给客户端。")]),t._v(" "),v("p",[t._v("服务器会顺便把一些客户端需要的资源一起推送到客户端，如在响应一个页面请求中，就可以随同页面的其它资源。")]),t._v(" "),v("p",[t._v("免得客户端再次创建连接发送请求到服务端获取。")]),t._v(" "),v("p",[t._v("这种方式非常适合加载静态资源。")]),t._v(" "),v("img",{attrs:{src:"https://raw.githubusercontent.com/Amyas/picgo-bed/master/amyas.github.io/42022-04-12-11-13-58.png",alt:"42022-04-12-11-13-58",width:"",height:""}}),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("h3",{attrs:{id:"http1-0-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http1-0-2"}},[t._v("#")]),t._v(" HTTP1.0")]),t._v(" "),v("ul",[v("li",[t._v("浏览器与服务器只保持短暂的连接，浏览器每次请求都需要与服务器建立一个TCP连接。")])]),t._v(" "),v("h3",{attrs:{id:"http1-1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http1-1-2"}},[t._v("#")]),t._v(" HTTP1.1")]),t._v(" "),v("ul",[v("li",[t._v("引入了持久连接，即TCP连接默认不关闭，可以被多个请求复用。")]),t._v(" "),v("li",[t._v("在同一个TCP连接里面，客户端可以同时发送多个请求。")]),t._v(" "),v("li",[t._v("虽然允许复用TCP连接，但是同一个TCP连接里面，所有的数据通信是按次序进行的，服务器指由处理完一个请求，才会接着处理下一个请求，如果前面的处理特别慢，后面就会有需要请求排队等着。")]),t._v(" "),v("li",[t._v("新增了一些请求方法（options\\put\\patch\\delete)。")])]),t._v(" "),v("h3",{attrs:{id:"http2-0-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http2-0-2"}},[t._v("#")]),t._v(" HTTP2.0")]),t._v(" "),v("ul",[v("li",[t._v("采用二进制格式而非文本格式。")]),t._v(" "),v("li",[t._v("完全多路复用，而非有序并阻塞的、只需一个连接即可实现并行。")]),t._v(" "),v("li",[t._v("使用首部压缩，降低开销。")]),t._v(" "),v("li",[t._v("服务器主动推送。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);