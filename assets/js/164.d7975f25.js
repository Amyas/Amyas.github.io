(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{433:function(e,v,_){"use strict";_.r(v);var o=_(13),d=Object(o.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"_1-谈谈对mvvm的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-谈谈对mvvm的理解"}},[e._v("#")]),e._v(" 1.谈谈对mvvm的理解")]),e._v(" "),v("p",[e._v("MVVM是"),v("code",[e._v("Model-View-ViewModel")]),e._v("的简写。")]),e._v(" "),v("p",[e._v("在MVVM中，"),v("code",[e._v("View")]),e._v("是通过数据驱动的，"),v("code",[e._v("Model")]),e._v("一旦改变就会相应的刷新对应的"),v("code",[e._v("View")]),e._v("，"),v("code",[e._v("View")]),e._v("如果改变，也会改变对应的"),v("code",[e._v("Model")]),e._v("。")]),e._v(" "),v("p",[e._v("这种方式就可以在业务处理中只关心数据的流转，而无需直接和页面打交道。"),v("code",[e._v("ViewModel")]),e._v("只关心数据和业务的处理，不关心"),v("code",[e._v("View")]),e._v("如何处理数据。")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Model")]),e._v(" - "),v("code",[e._v("Model")]),e._v("层仅仅关注数据本身，不关心任何行为(格式化数据由"),v("code",[e._v("View")]),e._v("负责)，这里可以把它理解为一个类似"),v("code",[e._v("json")]),e._v("的数据对象。")]),e._v(" "),v("li",[v("code",[e._v("View")]),e._v(" - "),v("code",[e._v("MVVM")]),e._v("中的"),v("code",[e._v("View")]),e._v("通过使用模版语法来声明式的将数据渲染"),v("code",[e._v("DOM")]),e._v("，当"),v("code",[e._v("ViewModel")]),e._v("对"),v("code",[e._v("Model")]),e._v("进行更新的时候，会通过数据绑定更新到"),v("code",[e._v("View")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("ViewModel")]),e._v(" - "),v("code",[e._v("ViewModel")]),e._v("会对"),v("code",[e._v("View")]),e._v("层的声明进行处理，当"),v("code",[e._v("ViewModel")]),e._v("中数据变化，"),v("code",[e._v("View")]),e._v("层会进行更新；如果是"),v("strong",[e._v("双向绑定")]),e._v("，一旦"),v("code",[e._v("View")]),e._v("对绑定的数据进行操作，则"),v("code",[e._v("ViewModel")]),e._v("中的数据也会进行自动更新。")])]),e._v(" "),v("p",[v("strong",[e._v("在Vue中使用数据劫持("),v("code",[e._v("Object.defineProperty")]),e._v(")来处理数据("),v("code",[e._v("Model")]),e._v(")和发布订阅处理视图("),v("code",[e._v("View")]),e._v(")")])])])}),[],!1,null,null,null);v.default=d.exports}}]);