{
  "version": 3,
  "sources": ["../src/index.ts", "../src/effect.ts", "../../shared/src/index.ts", "../src/reactive.ts"],
  "sourcesContent": ["export { effect } from \"./effect\";\nexport { reactive } from \"./reactive\";\n", "export function effect() {}\n", "export const isObject = (value) => {\n  return typeof value === \"object\" && value !== null;\n};\n", "import { isObject } from \"@vue/shared\";\n\nconst reactiveMap = new WeakMap(); // key\u5FC5\u987B\u662F\u5BF9\u8C61\uFF0C\u5F31\u5F15\u7528\nconst enum ReactiveFlags {\n  IS_REACTIVE = \"__v_isReactive\",\n}\n\nexport function reactive(target) {\n  if (!isObject(target)) {\n    return target;\n  }\n\n  if (target[ReactiveFlags.IS_REACTIVE]) {\n    return target;\n  }\n\n  const existing = reactiveMap.get(target);\n  if (existing) {\n    return existing;\n  }\n\n  // es6\u4E2D\u7684proxy\n  // proxy\u4E00\u822C\u642D\u914Dreflect\u4F7F\u7528\uFF0C\u4FDD\u8BC1this\u6307\u5411\u6B63\u786E\n  const proxy = new Proxy(target, {\n    get(target, key, receiver) {\n      if (key === ReactiveFlags.IS_REACTIVE) {\n        return true;\n      }\n      return Reflect.get(target, key, receiver);\n    },\n    set(target, key, value, receiver) {\n      return Reflect.set(target, key, value, receiver);\n    },\n  });\n\n  reactiveMap.set(target, proxy);\n\n  return proxy;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,oBAAkB;AAAA,EAAC;;;ACAnB,MAAM,WAAW,CAAC,UAAU;AACjC,WAAO,OAAO,UAAU,YAAY,UAAU;AAAA,EAChD;;;ACAA,MAAM,cAAc,oBAAI,QAAQ;AAKzB,oBAAkB,QAAQ;AAC/B,QAAI,CAAC,SAAS,MAAM,GAAG;AACrB,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,qCAA4B;AACrC,aAAO;AAAA,IACT;AAEA,UAAM,WAAW,YAAY,IAAI,MAAM;AACvC,QAAI,UAAU;AACZ,aAAO;AAAA,IACT;AAIA,UAAM,QAAQ,IAAI,MAAM,QAAQ;AAAA,MAC9B,IAAI,SAAQ,KAAK,UAAU;AACzB,YAAI,QAAQ,oCAA2B;AACrC,iBAAO;AAAA,QACT;AACA,eAAO,QAAQ,IAAI,SAAQ,KAAK,QAAQ;AAAA,MAC1C;AAAA,MACA,IAAI,SAAQ,KAAK,OAAO,UAAU;AAChC,eAAO,QAAQ,IAAI,SAAQ,KAAK,OAAO,QAAQ;AAAA,MACjD;AAAA,IACF,CAAC;AAED,gBAAY,IAAI,QAAQ,KAAK;AAE7B,WAAO;AAAA,EACT;",
  "names": []
}
